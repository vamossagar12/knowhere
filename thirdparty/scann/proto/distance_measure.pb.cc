// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scann/proto/distance_measure.proto

#include "scann/proto/distance_measure.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_scann_2fproto_2fdistance_5fmeasure_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DistanceMeasureParamsConfig_scann_2fproto_2fdistance_5fmeasure_2eproto;
namespace research_scann {
class DistanceMeasureConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DistanceMeasureConfig> _instance;
} _DistanceMeasureConfig_default_instance_;
class DistanceMeasureParamsConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DistanceMeasureParamsConfig> _instance;
} _DistanceMeasureParamsConfig_default_instance_;
}  // namespace research_scann
static void InitDefaultsscc_info_DistanceMeasureConfig_scann_2fproto_2fdistance_5fmeasure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::research_scann::DistanceMeasureConfig::_i_give_permission_to_break_this_code_default_distance_measure_.DefaultConstruct();
  *::research_scann::DistanceMeasureConfig::_i_give_permission_to_break_this_code_default_distance_measure_.get_mutable() = std::string("SquaredL2Distance", 17);
  ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyString(
      ::research_scann::DistanceMeasureConfig::_i_give_permission_to_break_this_code_default_distance_measure_.get_mutable());
  {
    void* ptr = &::research_scann::_DistanceMeasureConfig_default_instance_;
    new (ptr) ::research_scann::DistanceMeasureConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::research_scann::DistanceMeasureConfig::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_DistanceMeasureConfig_scann_2fproto_2fdistance_5fmeasure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsscc_info_DistanceMeasureConfig_scann_2fproto_2fdistance_5fmeasure_2eproto}, {
      &scc_info_DistanceMeasureParamsConfig_scann_2fproto_2fdistance_5fmeasure_2eproto.base,}};

static void InitDefaultsscc_info_DistanceMeasureParamsConfig_scann_2fproto_2fdistance_5fmeasure_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::research_scann::_DistanceMeasureParamsConfig_default_instance_;
    new (ptr) ::research_scann::DistanceMeasureParamsConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::research_scann::DistanceMeasureParamsConfig::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_DistanceMeasureParamsConfig_scann_2fproto_2fdistance_5fmeasure_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_DistanceMeasureParamsConfig_scann_2fproto_2fdistance_5fmeasure_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_scann_2fproto_2fdistance_5fmeasure_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_scann_2fproto_2fdistance_5fmeasure_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_scann_2fproto_2fdistance_5fmeasure_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_scann_2fproto_2fdistance_5fmeasure_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::research_scann::DistanceMeasureConfig, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::research_scann::DistanceMeasureConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::research_scann::DistanceMeasureConfig, distance_measure_),
  PROTOBUF_FIELD_OFFSET(::research_scann::DistanceMeasureConfig, distance_measure_params_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::research_scann::DistanceMeasureParamsConfig, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::research_scann::DistanceMeasureParamsConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::research_scann::DistanceMeasureParamsConfig, filename_),
  0,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::research_scann::DistanceMeasureConfig)},
  { 9, 15, sizeof(::research_scann::DistanceMeasureParamsConfig)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::research_scann::_DistanceMeasureConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::research_scann::_DistanceMeasureParamsConfig_default_instance_),
};

const char descriptor_table_protodef_scann_2fproto_2fdistance_5fmeasure_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\"scann/proto/distance_measure.proto\022\016re"
  "search_scann\"\222\001\n\025DistanceMeasureConfig\022+"
  "\n\020distance_measure\030\001 \001(\t:\021SquaredL2Dista"
  "nce\022L\n\027distance_measure_params\030\002 \001(\0132+.r"
  "esearch_scann.DistanceMeasureParamsConfi"
  "g\"/\n\033DistanceMeasureParamsConfig\022\020\n\010file"
  "name\030\001 \001(\t"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_scann_2fproto_2fdistance_5fmeasure_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_scann_2fproto_2fdistance_5fmeasure_2eproto_sccs[2] = {
  &scc_info_DistanceMeasureConfig_scann_2fproto_2fdistance_5fmeasure_2eproto.base,
  &scc_info_DistanceMeasureParamsConfig_scann_2fproto_2fdistance_5fmeasure_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_scann_2fproto_2fdistance_5fmeasure_2eproto_once;
static bool descriptor_table_scann_2fproto_2fdistance_5fmeasure_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_scann_2fproto_2fdistance_5fmeasure_2eproto = {
  &descriptor_table_scann_2fproto_2fdistance_5fmeasure_2eproto_initialized, descriptor_table_protodef_scann_2fproto_2fdistance_5fmeasure_2eproto, "scann/proto/distance_measure.proto", 250,
  &descriptor_table_scann_2fproto_2fdistance_5fmeasure_2eproto_once, descriptor_table_scann_2fproto_2fdistance_5fmeasure_2eproto_sccs, descriptor_table_scann_2fproto_2fdistance_5fmeasure_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_scann_2fproto_2fdistance_5fmeasure_2eproto::offsets,
  file_level_metadata_scann_2fproto_2fdistance_5fmeasure_2eproto, 2, file_level_enum_descriptors_scann_2fproto_2fdistance_5fmeasure_2eproto, file_level_service_descriptors_scann_2fproto_2fdistance_5fmeasure_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_scann_2fproto_2fdistance_5fmeasure_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_scann_2fproto_2fdistance_5fmeasure_2eproto), true);
namespace research_scann {

// ===================================================================

void DistanceMeasureConfig::InitAsDefaultInstance() {
  ::research_scann::_DistanceMeasureConfig_default_instance_._instance.get_mutable()->distance_measure_params_ = const_cast< ::research_scann::DistanceMeasureParamsConfig*>(
      ::research_scann::DistanceMeasureParamsConfig::internal_default_instance());
}
class DistanceMeasureConfig::_Internal {
 public:
  using HasBits = decltype(std::declval<DistanceMeasureConfig>()._has_bits_);
  static void set_has_distance_measure(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::research_scann::DistanceMeasureParamsConfig& distance_measure_params(const DistanceMeasureConfig* msg);
  static void set_has_distance_measure_params(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::research_scann::DistanceMeasureParamsConfig&
DistanceMeasureConfig::_Internal::distance_measure_params(const DistanceMeasureConfig* msg) {
  return *msg->distance_measure_params_;
}
::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> DistanceMeasureConfig::_i_give_permission_to_break_this_code_default_distance_measure_;
DistanceMeasureConfig::DistanceMeasureConfig()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:research_scann.DistanceMeasureConfig)
}
DistanceMeasureConfig::DistanceMeasureConfig(const DistanceMeasureConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  distance_measure_.UnsafeSetDefault(&::research_scann::DistanceMeasureConfig::_i_give_permission_to_break_this_code_default_distance_measure_.get());
  if (from.has_distance_measure()) {
    distance_measure_.AssignWithDefault(&::research_scann::DistanceMeasureConfig::_i_give_permission_to_break_this_code_default_distance_measure_.get(), from.distance_measure_);
  }
  if (from.has_distance_measure_params()) {
    distance_measure_params_ = new ::research_scann::DistanceMeasureParamsConfig(*from.distance_measure_params_);
  } else {
    distance_measure_params_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:research_scann.DistanceMeasureConfig)
}

void DistanceMeasureConfig::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DistanceMeasureConfig_scann_2fproto_2fdistance_5fmeasure_2eproto.base);
  distance_measure_.UnsafeSetDefault(&::research_scann::DistanceMeasureConfig::_i_give_permission_to_break_this_code_default_distance_measure_.get());
  distance_measure_params_ = nullptr;
}

DistanceMeasureConfig::~DistanceMeasureConfig() {
  // @@protoc_insertion_point(destructor:research_scann.DistanceMeasureConfig)
  SharedDtor();
}

void DistanceMeasureConfig::SharedDtor() {
  distance_measure_.DestroyNoArena(&::research_scann::DistanceMeasureConfig::_i_give_permission_to_break_this_code_default_distance_measure_.get());
  if (this != internal_default_instance()) delete distance_measure_params_;
}

void DistanceMeasureConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DistanceMeasureConfig& DistanceMeasureConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DistanceMeasureConfig_scann_2fproto_2fdistance_5fmeasure_2eproto.base);
  return *internal_default_instance();
}


void DistanceMeasureConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:research_scann.DistanceMeasureConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      distance_measure_.UnsafeMutablePointer()->assign(*&::research_scann::DistanceMeasureConfig::_i_give_permission_to_break_this_code_default_distance_measure_.get());
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(distance_measure_params_ != nullptr);
      distance_measure_params_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DistanceMeasureConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string distance_measure = 1 [default = "SquaredL2Distance"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_distance_measure(), ptr, ctx, "research_scann.DistanceMeasureConfig.distance_measure");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .research_scann.DistanceMeasureParamsConfig distance_measure_params = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(mutable_distance_measure_params(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DistanceMeasureConfig::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:research_scann.DistanceMeasureConfig)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string distance_measure = 1 [default = "SquaredL2Distance"];
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_distance_measure()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->distance_measure().data(), static_cast<int>(this->distance_measure().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "research_scann.DistanceMeasureConfig.distance_measure");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .research_scann.DistanceMeasureParamsConfig distance_measure_params = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
               input, mutable_distance_measure_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:research_scann.DistanceMeasureConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:research_scann.DistanceMeasureConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DistanceMeasureConfig::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:research_scann.DistanceMeasureConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string distance_measure = 1 [default = "SquaredL2Distance"];
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->distance_measure().data(), static_cast<int>(this->distance_measure().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "research_scann.DistanceMeasureConfig.distance_measure");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->distance_measure(), output);
  }

  // optional .research_scann.DistanceMeasureParamsConfig distance_measure_params = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, _Internal::distance_measure_params(this), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:research_scann.DistanceMeasureConfig)
}

::PROTOBUF_NAMESPACE_ID::uint8* DistanceMeasureConfig::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:research_scann.DistanceMeasureConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string distance_measure = 1 [default = "SquaredL2Distance"];
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->distance_measure().data(), static_cast<int>(this->distance_measure().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "research_scann.DistanceMeasureConfig.distance_measure");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->distance_measure(), target);
  }

  // optional .research_scann.DistanceMeasureParamsConfig distance_measure_params = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, _Internal::distance_measure_params(this), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:research_scann.DistanceMeasureConfig)
  return target;
}

size_t DistanceMeasureConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:research_scann.DistanceMeasureConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string distance_measure = 1 [default = "SquaredL2Distance"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->distance_measure());
    }

    // optional .research_scann.DistanceMeasureParamsConfig distance_measure_params = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *distance_measure_params_);
    }

  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DistanceMeasureConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:research_scann.DistanceMeasureConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const DistanceMeasureConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DistanceMeasureConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:research_scann.DistanceMeasureConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:research_scann.DistanceMeasureConfig)
    MergeFrom(*source);
  }
}

void DistanceMeasureConfig::MergeFrom(const DistanceMeasureConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:research_scann.DistanceMeasureConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      distance_measure_.AssignWithDefault(&::research_scann::DistanceMeasureConfig::_i_give_permission_to_break_this_code_default_distance_measure_.get(), from.distance_measure_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_distance_measure_params()->::research_scann::DistanceMeasureParamsConfig::MergeFrom(from.distance_measure_params());
    }
  }
}

void DistanceMeasureConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:research_scann.DistanceMeasureConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DistanceMeasureConfig::CopyFrom(const DistanceMeasureConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:research_scann.DistanceMeasureConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DistanceMeasureConfig::IsInitialized() const {
  return true;
}

void DistanceMeasureConfig::InternalSwap(DistanceMeasureConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  distance_measure_.Swap(&other->distance_measure_, &::research_scann::DistanceMeasureConfig::_i_give_permission_to_break_this_code_default_distance_measure_.get(),
    GetArenaNoVirtual());
  swap(distance_measure_params_, other->distance_measure_params_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DistanceMeasureConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void DistanceMeasureParamsConfig::InitAsDefaultInstance() {
}
class DistanceMeasureParamsConfig::_Internal {
 public:
  using HasBits = decltype(std::declval<DistanceMeasureParamsConfig>()._has_bits_);
  static void set_has_filename(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

DistanceMeasureParamsConfig::DistanceMeasureParamsConfig()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:research_scann.DistanceMeasureParamsConfig)
}
DistanceMeasureParamsConfig::DistanceMeasureParamsConfig(const DistanceMeasureParamsConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  filename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from.has_filename()) {
    filename_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
  // @@protoc_insertion_point(copy_constructor:research_scann.DistanceMeasureParamsConfig)
}

void DistanceMeasureParamsConfig::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DistanceMeasureParamsConfig_scann_2fproto_2fdistance_5fmeasure_2eproto.base);
  filename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

DistanceMeasureParamsConfig::~DistanceMeasureParamsConfig() {
  // @@protoc_insertion_point(destructor:research_scann.DistanceMeasureParamsConfig)
  SharedDtor();
}

void DistanceMeasureParamsConfig::SharedDtor() {
  filename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void DistanceMeasureParamsConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DistanceMeasureParamsConfig& DistanceMeasureParamsConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DistanceMeasureParamsConfig_scann_2fproto_2fdistance_5fmeasure_2eproto.base);
  return *internal_default_instance();
}


void DistanceMeasureParamsConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:research_scann.DistanceMeasureParamsConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    filename_.ClearNonDefaultToEmptyNoArena();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* DistanceMeasureParamsConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string filename = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8Verify(mutable_filename(), ptr, ctx, "research_scann.DistanceMeasureParamsConfig.filename");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool DistanceMeasureParamsConfig::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:research_scann.DistanceMeasureParamsConfig)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string filename = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadString(
                input, this->mutable_filename()));
          ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
            this->filename().data(), static_cast<int>(this->filename().length()),
            ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::PARSE,
            "research_scann.DistanceMeasureParamsConfig.filename");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:research_scann.DistanceMeasureParamsConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:research_scann.DistanceMeasureParamsConfig)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void DistanceMeasureParamsConfig::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:research_scann.DistanceMeasureParamsConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "research_scann.DistanceMeasureParamsConfig.filename");
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->filename(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:research_scann.DistanceMeasureParamsConfig)
}

::PROTOBUF_NAMESPACE_ID::uint8* DistanceMeasureParamsConfig::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:research_scann.DistanceMeasureParamsConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string filename = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->filename().data(), static_cast<int>(this->filename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "research_scann.DistanceMeasureParamsConfig.filename");
    target =
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteStringToArray(
        1, this->filename(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:research_scann.DistanceMeasureParamsConfig)
  return target;
}

size_t DistanceMeasureParamsConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:research_scann.DistanceMeasureParamsConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string filename = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->filename());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DistanceMeasureParamsConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:research_scann.DistanceMeasureParamsConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const DistanceMeasureParamsConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DistanceMeasureParamsConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:research_scann.DistanceMeasureParamsConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:research_scann.DistanceMeasureParamsConfig)
    MergeFrom(*source);
  }
}

void DistanceMeasureParamsConfig::MergeFrom(const DistanceMeasureParamsConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:research_scann.DistanceMeasureParamsConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_filename()) {
    _has_bits_[0] |= 0x00000001u;
    filename_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.filename_);
  }
}

void DistanceMeasureParamsConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:research_scann.DistanceMeasureParamsConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DistanceMeasureParamsConfig::CopyFrom(const DistanceMeasureParamsConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:research_scann.DistanceMeasureParamsConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DistanceMeasureParamsConfig::IsInitialized() const {
  return true;
}

void DistanceMeasureParamsConfig::InternalSwap(DistanceMeasureParamsConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  filename_.Swap(&other->filename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata DistanceMeasureParamsConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace research_scann
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::research_scann::DistanceMeasureConfig* Arena::CreateMaybeMessage< ::research_scann::DistanceMeasureConfig >(Arena* arena) {
  return Arena::CreateInternal< ::research_scann::DistanceMeasureConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::research_scann::DistanceMeasureParamsConfig* Arena::CreateMaybeMessage< ::research_scann::DistanceMeasureParamsConfig >(Arena* arena) {
  return Arena::CreateInternal< ::research_scann::DistanceMeasureParamsConfig >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
